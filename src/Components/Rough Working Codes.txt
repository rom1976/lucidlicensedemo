import axios from "axios";
import { useState,useEffect,useContext } from "react";
import { Form,Button,Container,Row,Col } from "react-bootstrap";
import { Link } from "react-router-dom";

import ContextData from "../store/context-data"; 
const SelectModules = (props) =>{

  const ctx =useContext(ContextData);
  const[selectModule,setSelectModule] = useState([]);
  const[Loader,setLoader] = useState(false);
  const [ULListCRM,setULListCRM] = useState();
  const [crmModuleCode,setCRMModuleCode] = useState();
  const [ULListFOM,setULListFOM] = useState();
  const [fomModuleCode,setFOMModuleCode] = useState();
  const [ULListGTP,setULListGTP] = useState();
  const [gtpModuleCode,setGTPModuleCode] = useState();
  const [ULListLIC,setULListLIC] = useState();
  const [licModuleCode,setLICModuleCode] = useState();
  const [ULListPOS,setULListPOS] = useState();
  const [posModuleCode,setPOSModuleCode] = useState();
  const [ULListTLYI,setULListTLYI] = useState();
  const [tlyiModuleCode,setTLYIModuleCode] = useState();
  const [ULListURM,setULListURM] = useState(); 
  const [urmModuleCode,setURMModuleCode] = useState();
  const [liOnlineOrder,setOnlineOrder] =useState();
  const [liTableReservation,setTableReservation] = useState();
  const [featureEbill,setFeatureEbill] = useState(); 
  const [featurePOSSync, setFeaturePOSSync] = useState();
  const[listLoader,setListLoader] = useState(false);
  const [list,setList] = useState([]);
  const [SelectedModulesObj,setSelectModulesObj]=useState();
  const [FeaturesList,setFeaturesList] = useState();
  

   
  useEffect(()=>{
        props.formSelectModuleHandler({

        })
  },[])

   const formHandler = () =>{
            const selectedModulesArr =[crmModuleCode,fomModuleCode,gtpModuleCode,licModuleCode,posModuleCode,tlyiModuleCode,
              urmModuleCode                        
            ];
            const selectedFeaturesArr =[featureEbill,featurePOSSync];
            const formData = selectedModulesArr.map((mcode)=>{
               return(
                 { 
                  ModuleCode: mcode,
                  
                  Features:[ mcode ===featureEbill && featureEbill], 
                  Features:[ mcode ===featurePOSSync && featurePOSSync], 
                  
               }
               )
             
             })
           console.log(formData);
     setSelectModulesObj(
      [
        {
            ModuleCode: [crmModuleCode,fomModuleCode,gtpModuleCode,licModuleCode,posModuleCode,tlyiModuleCode,
              urmModuleCode                        
            ],
            Features:[2],
            SubModules:[
                {
                    ModuleCode: "212",
                    Features: [2]
                }
            ]
        }
    ]
     )
     
   }

  const checkBoxHandler =(e) =>{
    
       //setULList((prev)=>[...prev,e.target.value]);       
       switch (e.target.value) {
        case 'Customer Relationship Managemen':
          if(e.target.checked===true){
              setULListCRM(e.target.value);
              setCRMModuleCode(e.target.id);}
              else{
                setULListCRM('-');}    
          break;
        case 'Front Office':
          if(e.target.checked===true){
          setULListFOM(e.target.value);
          setFOMModuleCode(e.target.id);
        }
          else{
            setULListFOM('-');}   
           break;
        case 'Gate Pass':
          if(e.target.checked===true){
          setULListGTP(e.target.value);
          setGTPModuleCode(e.target.id);
        }
          else{
            setULListGTP('-');}   
          break;
        case 'License Management':
          if(e.target.checked===true){
            setULListLIC(e.target.value);
            setLICModuleCode(e.target.id);
          }
            else{
              setULListLIC('-');} 
            break;
        case 'Point Of Sale':
          if(e.target.checked===true){
            setULListPOS(e.target.value);
            setPOSModuleCode(e.target.id);
          }
            else{
              setULListPOS('-');} 
              break;
        case 'Tally Interface':
          if(e.target.checked===true){
            setULListTLYI(e.target.value);}
            else{
              setULListTLYI('-');} 
            break;
        case 'User Management':
          if(e.target.checked===true){
            setULListURM(e.target.value);}
            else{
              setULListURM('');} 
            break;
        case 'Online Order':
          if(e.target.checked===true){
            setOnlineOrder(e.target.value);
          } else{
            setOnlineOrder('');
          } 
            break;
        case 'Table Reservation':
          if(e.target.checked===true){
            setTableReservation(e.target.value);
            console.log('Table Reservation event ---'+e.target.value );
          } else{
            setTableReservation('');
          } 
            break;
        case 'EBill':
          if(e.target.checked===true){
            setFeatureEbill(e.target.value); 
          } else{
            setFeatureEbill('');
          } 
            break;
        case 'POS Sync':
           if(e.target.checked===true){
             setFeaturePOSSync(e.target.value); 
           } else{
             setFeaturePOSSync('');
           } 
             break; 
        default: setListLoader(true);
                 
      } 


  }



  useEffect(()=>{
    console.log("Connecting...");
    axios.get('https://dev.lucidits.com/LUCIDLicenseManagementAPI/V1/GetModuleList',
      { headers: { Authorization: `Bearer ${ctx.APIToken}`}}
  )
  .then((response) => {
    console.log(response.data)
    const modulesData = response.data.response.modules;
    setSelectModule(modulesData); 
    setLoader(true);
  })
  },[setSelectModule]);

  const setFeaturesHandler = () =>{
    return(
      <> 
        
           <li style={{listStyle:'none'}}> Features
                 <ul>
                   {featureEbill &&
                      <li> {featureEbill} </li>
                   }
                   { featurePOSSync &&
                     <li>{featurePOSSync}</li>
                   }
               
                 </ul>

         </li>
        
      </>
    )

}
    useEffect (()=>{
      setFeaturesList(setFeaturesHandler);
    },[featurePOSSync,featureEbill])

   
   
   useEffect(()=>{
     setList(
       ()=>{
        const listState = [ULListCRM, ULListFOM,ULListGTP,ULListLIC,ULListPOS,ULListTLYI,ULListURM];
        const subList = [liOnlineOrder,liTableReservation];
        return(
              <>  {selectModule.map((item)=>{
                     
                     return <>     
                                     <ul style={{listStyle:'none'}}>

                                    
                                   {  listState.map((ullist,id)=>{
    
                                       return(
                                         <>   {
                                             
                                              item.moduleName === ullist &&   
                                            <li  key={id.toString()}>{ullist}
                                             {
                                                  item.subModules.map((subitem)=>{ 
                                                    return <> 
                                                             
                                                               <ul style={{listStyle:'none'}}>
                                                                  {
                                                                   subitem.moduleName===liOnlineOrder &&
                                                                   <li>{liOnlineOrder}</li>  
                                                                   } 
                                                                   {
                                                                    subitem.moduleName===liTableReservation &&   
                                                                    <li>{liTableReservation}</li> 
                                                                    }
                                                                      {
                                                                      subitem.moduleName===liOnlineOrder &&
                                                                      FeaturesList
                                                                   }
                                                                 
                                                               </ul>

                                                              
                                                        </>
                                                  })
                                             }   
                                            </li>
                                         } 
                                         </>
                                         )
                                      })
                                    }
                                     </ul>
                                
                                                          
                           </>
                    
                    }
                    )}
                
              </>
        )
       }
     )

   },[ULListCRM, ULListFOM,ULListGTP,ULListLIC,ULListPOS,ULListTLYI,ULListURM,liOnlineOrder,liTableReservation,FeaturesList])
 
   

  const ULListCreator = () =>{
         const listState = [ULListCRM, ULListFOM,ULListGTP,ULListLIC,ULListPOS,ULListTLYI,ULListURM];
    return(
          <>
            <ul>
              {  listState.map((ullist,id)=>{

                  return(
                    <> 
                       <li key={id.toString()}>{ullist}
                          {ullist.map((item)=>{
                            
                          })}
                       
                       </li>
                    </>
                  )
                })
              }
            </ul>
          </>
    )

  }
    
    let UList;
    useEffect(()=>{
      console.log('Loaded from usEffect select Module');
     
      console.log(selectModule);     
    },[selectModule])
  

      const SModules = () =>{
        if (Loader) {
          return(
              <>

              </>

          )} else return (<> <p>Loading ....</p> </>)
      } 
  return(
      <>
      <Container>
        <h1>Select Modules</h1>
      <Row className='mb-2'>
          <Form.Label column md="2">
           Organization Name
          </Form.Label>
          <Col md="4">
         <Form.Control type='text'  defaultValue={ctx.CtxOrgName} />
         </Col>
         <Col md='2'></Col>
     </Row>

     <Row className='mb-2'>
          <Form.Label column md="2">
           Property Name
           </Form.Label>
          <Col md="4">
         <Form.Control type='text'  defaultValue={ctx.propertyName} />
         </Col>
         <Col md='2'></Col>
     </Row>
             {
     <Row>
    
                     <Col md='8' className='mb-1'>  {/*Main div starts here*/} 
                     <Row>  {/*Modules header and search starts here*/} 
               <Col md='2'> Modules {selectModule.length} </Col>
               <Col md="3">
               <Form.Control type='text'  placeholder='' />
              </Col>
                </Row>     {/*Modules header and search ends here*/}                             
                      <Row >   {/*Modules div starts here*/}
                    <Col md='1' > </Col>
                     <Col md='10' className='mb-2 sm-module'>
                      {  selectModule.map((item)=>{
                     return <>
                
                    <div className='sm-card' style={{float:'left'}} key={Math.random().toString}>
                    <Col md='7' className='txt '>{item.moduleCode}</Col>
                    <Col md='5' className='sel-check'>
                    <Form.Check style={{align:'right'}}
                    type="checkbox"
                    value={item.moduleName}
                    id={item.moduleCode}
                    label={item.moduleCode}
                    onChange={checkBoxHandler }
                    />  
                   </Col>
                   </div>
                   
                   </>
                      })
                    }

                 </Col> 
               </Row>      {/*Modules div ends here*/}

               <Row>  {/*SubModules header and search starts here*/}
               
               <Col md='4'> Sub Modules of POS {selectModule.map((item=>{if (item.subModules.length >0) return item.subModules.length}))} </Col>
               <Col md="3">
               <Form.Control type='text'  placeholder='' />
              </Col>
                </Row>     {/*SubModules header and search ends here*/}                             
                      <Row >   {/*SubModules div starts here*/}
                    <Col md='1' > </Col>
                     <Col md='10' className='mb-2 sm-module'>
                      {  selectModule.map((item)=>{
                     return <>
                              {item.subModules.map((item)=>{
                                return( 
                                      <>
                                             <div className='sm-card' style={{float:'left'}} key={Math.random().toString}>
                                             <Col md='5' className='txt '>{item.moduleName}</Col>
                                             <Col md='5' className='sel-check'>
                                             <Form.Check style={{align:'right'}}
                                             type="checkbox"
                                             id={item.moduleCode.toString()}
                                             value={item.moduleName}
                                             label=""
                                             onChange={checkBoxHandler}
                                            />  
                   </Col>
                   </div>
                                      </> 
                                      )
                              }) }
                    
                   
                   </>
                      })
                    }

                 </Col> 
               </Row>      {/*SubModules div ends here*/}

               <Row>  {/*Features header and search starts here*/}
               
               <Col md='4'> Features Of Online Orders { 
                            selectModule.map((item=>{
                              if (item.features.length >0) return item.features.length;    
                            }
                              ))
                              } </Col>
               <Col md="3">
               <Form.Control type='text'  placeholder='' />
              </Col>
                </Row>     {/*Features header and search ends here*/}                             
                      <Row >   {/*Features div starts here*/}
                    <Col md='1' > </Col>
                     <Col md='10' className='mb-2 sm-module'>
                      {  selectModule.map((item)=>{
                     return <>
                                 {item.features.map((item)=>{ 
                                   return(
                                     <>
                                     <div className='sm-card' style={{float:'left'}} key={Math.random().toString}>
                    <Col md='7' className='txt '>{item.featureName}</Col>
                    <Col md='5' className='sel-check'>
                    <Form.Check style={{align:'right'}}
                    type="checkbox"
                    value={item.featureName}
                    id={item.featureId}
                    label=""
                    onChange={checkBoxHandler}
                    />  
                   </Col>
                   </div>

                                     </> 
                                   ) 
                                 })}

                   
                   </>
                      })
                    }

                 </Col> 
               </Row>      {/*Features div ends here*/} 

            </Col>    {/*Main div ends here*/}
           
           
    
        {/* right div starts here*/}
       <Col md='4'  
       style={{
          border:'1px solid grey',
           height:'606px'
           }}>
           {list}
       </Col>
         
        </Row> }
        <Row>
                   <Col> </Col>
                   <Col> </Col>
                   <Col> </Col>
                   <Col>
                   {<Link to='/DefaultUsers'> <Button onClick={formHandler}>Next &gt;&gt;</Button></Link>} </Col>
                  
               </Row>       
  </Container>
  </>

  )
}

export default SelectModules;